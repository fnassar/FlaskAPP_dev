name: CI/CD Pipeline

on:
    push:
        branches:
            - "main"
    pull_request:
        branches:
            - "main"

jobs:
    test:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: .
        timeout-minutes: 5
        strategy:
            matrix:
                python-version: ["3.12"]

        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Cache dependencies
              uses: actions/cache@v2
              with:
                  path: ~/.cache/pip
                  key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
                  restore-keys: |
                      ${{ runner.os }}-pip-

            - name: Install dependencies
              run: |
                  python -m pip install --upgrade pip
                  if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

            - name: Run tests
              run: |
                  python -m pytest tests

    build_and_push:
        runs-on: ubuntu-latest
        needs: test
        steps:
            - name: Checkout code
              uses: actions/checkout@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2
              with:
                  driver: docker-container

            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}

            - name: Pull previous image
              run: |
                  docker pull ${{ secrets.DOCKER_USERNAME }}/flaskapp_dev_web:latest || true
                  docker tag ${{ secrets.DOCKER_USERNAME }}/flaskapp_dev_web:latest ${{ secrets.DOCKER_USERNAME }}/flaskapp_dev_web:previous || true

            - name: Build and push Docker images
              uses: docker/build-push-action@v3
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/flaskapp_dev_web:cache
                  cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/flaskapp_dev_web:cache,mode=max
                  tags: |
                      ${{ secrets.DOCKER_USERNAME }}/flaskapp_dev_web:latest
                      ${{ secrets.DOCKER_USERNAME }}/flaskapp_dev_web:${{ github.sha }}

            - name: Tag previous as current
              if: success()
              run: |
                  docker pull ${{ secrets.DOCKER_USERNAME }}/flaskapp_dev_web:latest
                  docker tag ${{ secrets.DOCKER_USERNAME }}/flaskapp_dev_web:latest ${{ secrets.DOCKER_USERNAME }}/flaskapp_dev_web:previous

    deploy:
        runs-on: ubuntu-latest
        needs: build_and_push

        steps:
            - name: Deploy to server
              run: |
                  echo "deployment depends on host."
                  # Add deployment commands here

            - name: Rollback on failure
              if: failure()
              run: |
                  echo "Rolling back to previous version..."
                  docker pull ${{ secrets.DOCKER_USERNAME }}/flaskapp_dev_web:previous
                  docker tag ${{ secrets.DOCKER_USERNAME }}/flaskapp_dev_web:previous ${{ secrets.DOCKER_USERNAME }}/flaskapp_dev_web:latest

                  echo "Redeploying the previous version..."
                  # Add redeployment commands here
